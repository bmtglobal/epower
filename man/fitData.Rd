% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Toolbox_run.r
\name{fitData}
\alias{fitData}
\title{fitData}
\usage{
fitData(excelInFile = "", dir.name = getwd(), read_package = "XLConnect")
}
\arguments{
\item{excelInFile}{the excel file in which the power
analysis scenario is described; exclude the directory
name (see dir.name), but ensure the working directory has been set to that
containing the workbook file.}

\item{dir.name}{the directory in which the excel file
is located.}

\item{read_package}{the R package to use for reading the excelworkbook interface.
Must be "XLConnect" or "openxlsx". Defaults to XLConnect.}

\item{ncores}{the number of cores required for the analysis}
}
\value{
Fitted model results - Including:  model fit statistics for the INLA analysis peformed
on the supplied pilot data as a .csv file written to the working directory
and a pdf showing the histogram of PIT values obtained
from the INLA fit.
}
\description{
Unpacks the power analysis data and scenarios from the epower template and fits
an INLA mixed model to the supplied pilot data. Generates the necessary R objects
to run assessPower(). See ?assessPower
}
\details{
This function wraps the other functions within the epower
package to extract the necessary scenario data and peform a Bayesin mixed model fit
using inla(). It generates the required R objects dataComponents and
scenarioParams for running the function assessPower().

The function requires INLA for estimation
of a mixed effects model used to parameterize the monte carlo simulation
and for model fits with and without that BvA * CvI interaction term that
are used to calculate model probabilities.

The function fitData() starts by checking that the excel interface workbook
specified actually exists in the current working directory, loads the required
packages, and then calls the supporting function designFactors(epower
package.interface.file = excelInFile), which is responsible for importing and
unpacking all of the data supplied in the excel interface workbook file.
During the unpacking process the original pilot data is imported, the
specified design fields are formatted to ensure they are factors and are
unique in terms of the coding of factor levels (i.e. Sites 1-3 within
Locations are given unique names across different locations), and then
relabelled to the uniform field names indicated in the excel interface.
The factor levels for BvA and CvI are also re-labelled to Before, After, Control
and Impact from whatever was originally contained within the pilot data. The
resulting outputs are converted to a list that is returned globally as the
object designComponents that is then available for use in subsequent function calls.
The use of the global assignment means that the designComponents object is
available outside the fitData() call, and can be used by  the assessPower()
function if this later called by the user.
Once the relevant data has been extracted, fitData() calls the function
powerScenario(), which takes the dataComponents list as an input and uses the
design information to construct an appropriate random and fixed effects model
structure, and fits the pilot data using a generalised mixed model via a
call to inla(). Once the pilot data is fitted, a posterior sample is obtained
(with the size equivalent to the number of simulation iterations specified by
the user) using the function inla.posterior.sample(n = n.its,pilot.data.fit)
supplied by the INLA package. Relevant statistical outputs are extracted and
formatted such that they can be written to file for the user's perusal (
saved as ...Model_fit_stats.csv), along with PIT values (obtained by
setting cpo=TRUE and calling pilot.data.fit$cpo$pit), which are plotted as a
histogram and saved as ...Pit_histograme.pdf so the user can evaluate the
quality of the model fit. A good model fit is indicated by an even frequency
distribution of values (i.e., the PIT histogram should be largely flat).
If the pilot data contains Before, After, Control and Impact data,
the powerScenario() function automatically fits inla() mixed models with and
without the BA x CI interaction term, calculates model probabilities, and returns
model fit statistical for both models, along with the calculated model
probabilities in the file ...Model_fit_stats.csv. This functionality can be
used to test for a significant impact in the supplied data.

XLConnect or openxlsx is used to
read the excel workbook file.

A template for the excel workbook file should have been made available with the package
tar.gz file.

You will need to check the current approximate CPU load
on the available cores before implementing ncores > 1
}
\examples{
install.packages("epower",dependencies=TRUE)
library(epower)
# Set the working directory in R to the folder containg the
# excel workbook. This can be done by clicking
# File -> Change dir...

fitData(excelInFile="",dir.name="data_examples")
}
\references{
Fisher R, Shiell GR, Sadler RJ, Inostroza K, Shedrawi G, Holmes TH, McGree JM (2019) epower: an R package for power analysis of Before-After-Control-Impact (BACI) designs. Methods in Ecology and Evolution.
}
\author{
Rebecca Fisher \email{r.fisher@aims.gov.au}
}
