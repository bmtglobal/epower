% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Toolbox_run.r
\name{assessPower}
\alias{assessPower}
\title{Assess Power}
\usage{
assessPower()
}
\arguments{
\item{NA}{the function takes no arguments, but instead uses the objects contained
in the global environment generated by the function fitData()}
}
\value{
A power analysis - Including: a saved R workspace containing all
simulated scenario data and simulation results exported as a .csv file
labelled with the string: ...scenario_power_summary.csv
}
\description{
Run the power toolbox following a call to fitData(). See ?fitData
}
\details{
This function wraps the other functions within the epower
package to perform the power analysis given as a
scenario within the excel file supplied to the companion function fitData().
fitData() must be run prior to running assessPower() in order to generate
the required model objects dataComponents and scenarioParams.

The function assessPower() allows the user to assess power across a range of
scenarios as specified in the excel interface workbook and unpacked in the call to fitData().
The function is directly
called by the user and has no arguments that need to be specified, but will only
run if the function fitData() has already been called by the user during that R
session, because it relies on global variables generated during the execution
of fitData(). Initially assessPower() calls the function buildScenarioMatrix()
which takes the information supplied on the excel interface file and generates
a matrix of all requested scenario combinations. Each row of this matrix is
then passed to the function run.scenario(), which is responsible for building the
monte-carlo datasets based on the specifications of that scenario (including
the specified effect size) and the posterior sample generated by powerScenario()
from the pilot data model fit; combining this with the original pilot data;
and then calculating posterior model probabilities for a model with and without
the BA*CI interaction term. The returned model probabilities are collated such
that those <0.5 are assigned a 1 (representing a successful detection of impact)
for that iteration of that scenario, and those >0.5 are assigned a 0
(no detection of impact). Where no effect is applied in a given scenario,
the proportion of successful detections represents type 1 error, whereas if
an effect was applied, the proportion of successful detections represents
statistical power for that scenario. The proportion of successful detections
is combined with the generated scenario matrix, and output as a csv
file ...scenario_power_summary.csv.
}
\examples{
install.packages("epower",dependencies=TRUE)
library(epower)
# Set the working directory in R to the folder containg the
# excel workbook. This can be done by clicking
# File -> Change dir...

fitData(excelInFile="epower_interface_V1.3.xlsx")
assessPower()

}
\references{
Fisher R, Shiell GR, Sadler RJ, Inostroza K, Shedrawi G, Holmes TH, McGree JM (2019) epower: an R package for power analysis of Before-After-Control-Impact (BACI) designs. Methods in Ecology and Evolution.
}
\author{
Rebecca Fisher \email{r.fisher@aims.gov.au}
}
